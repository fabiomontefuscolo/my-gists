map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

server {
	listen 80;
	listen [::]:80;

	server_name example.com;
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

	server_name example.com;

	# docker run -d
	#   --name dns-gen
	#   --restart always
	#   --log-opt "max-size=10m"
	#   -e GATEWAY=172.17.0.1
	#   --volume /:/host:ro
	#   --volume /var/run/docker.sock:/var/run/docker.sock
	#   -p 127.0.0.54:53:53/udp
	#   jderusse/dns-gen
	resolver 127.0.0.54;
	set $openfire_upstream_domain "openfire.openfire.docker";

	location / {
		include proxy_params;
		proxy_pass http://$openfire_upstream_domain:9090;
	}

	location /http-bind/ {
		include proxy_params;
		proxy_pass http://$openfire_upstream_domain:7070;
	}

	location /ws/ {
		include proxy_params;
		proxy_http_version 1.1;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_read_timeout 86400s;
		proxy_send_timeout 86400s;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_pass http://$openfire_upstream_domain:7070;
	}
}
